{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/Project/ProjectItem.js","components/Project/CreateProjectButton.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/SecurityActions.js","components/Layout/Header.js","components/Project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","type","payload","push","t0","response","data","stop","_x","apply","this","arguments","ProjectItem","onDeleteClick","id","_this","props","deleteProject","react_default","createElement","className","projectIdentifier","projectName","description","react_router_dom","to","concat","onClick","bind","Component","connect","_ref4","_callee4","_context4","window","confirm","delete","_x4","CreateProjectButton","Fragment","Dashboard","getProjects","projects","Project_CreateProjectButton","map","Project_ProjectItem","key","state","_ref2","_callee2","res","_context2","get","sent","_x2","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","_this$props$security","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","start_date","end_date","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newProject","classnames","is-invalid","placeholder","initialState","project_tasks","project_task","combineReducers","length","undefined","action","objectSpread","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateProject","event","updateProject","_nextProps$project","match","params","getProject","disabled","_ref3","_callee3","_context3","_x3","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityClass","priorityString","priority","summary","acceptanceCriteria","_ref5","_callee5","_context5","_x5","Backlog","tasks","project_tasks_prop","ProjectTasks_ProjectTask","todoItems","inProgressItems","doneItems","i","status","ProjectBoard","getBacklog","boardContent","projectNotFound","role","ProjectBoard_Backlog","boardAlgorithm","AddProjectTask","dueDate","newTask","addProjectTask","projectTask","UpdateProjectTask","create_at","_this$props$match$par","getProjectTask","_nextProps$project_ta","updateProjectTask","project_Task","patch","Landing","Register","username","password","confirmPassword","prevProps","prevState","newUser","createNewUsers","Login","loginRequest","login","decoded","setItem","jwt_decode","component","otherProps","objectWithoutProperties","react_router","assign","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","es","Layout_Header","exact","path","securityUtils_SecureRoute","Boolean","hostname","ReactDOM","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5417ca92.chunk.js","sourcesContent":["import axios from 'axios';\nimport {GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from './types';\n\n\nexport const createProject = (project , history) => async dispatch => {\n\n    try {\n        await axios.post(\"/api/project\", project,);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })  \n        history.push(\"/dashboard\");\n\n    } catch (error) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: error.response.data\n        })   \n    }\n} ;\n\nexport const getProjects = () => async dispatch => {\n\n    const res = await axios.get(\"/api/project/all\");\n    dispatch({\n        type : GET_PROJECTS,\n        payload : res.data\n    });\n};\n\nexport const getProject = (id, history) => async dispatch => {\n\n    try {\n    const res = await axios.get(`/api/project/${id}`);\n    dispatch({\n        type : GET_PROJECT,\n        payload : res.data\n    });\n    }\n    catch(error){\n        history.push(\"/dashboard\");\n    }\n    \n};\n\n\nexport const deleteProject = id => async dispatch => {\n\n    if(window.confirm(\"Are you sure? This will delete the project and all data related to it\")){\n        \n        await axios.delete(`/api/project/${id}`);\n        dispatch({\n            type: DELETE_PROJECT,\n            payload : id\n                });\n    }\n};","export const GET_ERRORS = 'GET_ERRORS';\nexport const GET_PROJECTS = 'GET_PROJECTS';\nexport const GET_PROJECT = 'GET_PROJECT';\nexport const DELETE_PROJECT = 'DELETE_PROJECT';\n\n// Types for BACKLOG ACTIONS\n\nexport const GET_BACKLOG = 'GET_BACKLOG';\nexport const GET_PROJECT_TASK = 'GET_PROJECT_TASK';\nexport const DELETE_PROJECT_TASK = 'DELETE_PROJECT_TASK';\n\n//Types for Security ACTIONS\n\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React , {Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {deleteProject} from '../../actions/projectActions';\n\nclass ProjectItem extends Component {\n\n    onDeleteClick = id => {\n        this.props.deleteProject(id);\n    };\n\n    render () {\n\n        const {project} = this.props;\n        return (\n          <div className = \"project\"> \n            <div className=\"container\">\n                <div className=\"card card-body bg-light mb-3\">\n                    <div className=\"row\">\n                        <div className=\"col-2\">\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\n                        </div>\n                        <div className=\"col-lg-6 col-md-4 col-8\">\n                            <h3>{project.projectName}</h3>\n                            <p>{project.description}</p>\n                        </div>\n                        <div className=\"col-md-4 d-none d-lg-block\">\n                            <ul className=\"list-group\">\n                                <Link to = {`/projectBoard/${project.projectIdentifier}`} >\n                                    <li className=\"list-group-item board\">\n                                        <i className=\"fa fa-flag-checkered pr-1\"> Project Board </i>\n                                    </li>\n                                </Link>\n                                <Link to={`/updateProject/${project.projectIdentifier}`} >\n                                    <li className=\"list-group-item update\">\n                                        <i className=\"fa fa-edit pr-1\"> Update Project Info</i>\n                                    </li>\n                                </Link>\n                               \n                                    <li className=\"list-group-item delete\" onClick = {this.onDeleteClick.bind(this, project.projectIdentifier)} >\n                                        <i className=\"fa fa-minus-circle pr-1\"> Delete Project</i>\n                                    </li>\n                                \n                            </ul>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    </div>\n        );\n    }\n\n};\n\nProjectItem.propTypes = {\n    deleteProject : PropTypes.func.isRequired\n};\n\nexport default connect(null , {deleteProject}) (ProjectItem);","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nconst CreateProjectButton = () => {\n\nreturn (\n    <React.Fragment>\n        <Link to = \"/addProject\" \n        className=\"btn btn-lg btn-info\"> Create a Project</Link>\n    </React.Fragment>\n);\n\n};\n\nexport default CreateProjectButton;","import React, { Component } from 'react';\nimport ProjectItem from './Project/ProjectItem';\nimport CreateProjectButton from './Project/CreateProjectButton';\nimport { connect } from 'react-redux';\nimport {getProjects } from '../actions/projectActions';\nimport PropTypes from 'prop-types';\n\n\n\n class Dashboard extends Component  {\n\n    componentDidMount () {\n        this.props.getProjects();\n    }\n\n    render () {\n        const {projects} = this.props.project;\n        return (\n            <div className=\"projects\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12\">\n                        <h1 className=\"display-4 text-center\">Projects</h1>\n                        <br />\n                        <CreateProjectButton />\n                        <br />\n                        <hr />\n                    {projects.map(project => (\n                        <ProjectItem key={project.id} project={project} />\n                    ))  \n                    }\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        );\n    }\n}\n\nDashboard.propTypes = {\n    project : PropTypes.object.isRequired,\n    getProjects : PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => ({\n    project : state.project\n});\n\n\nexport default connect(mapStateToProps , {getProjects}) (Dashboard);","import axios from \"axios\";\n\n\nconst setJWTToken = token => {\n\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete  axios.defaults.headers.common[\"Authorization\"];\n        \n    }\n};\n\nexport default setJWTToken;","import axios from \"axios\";\nimport { GET_ERRORS, SET_CURRENT_USER} from \"./types\";\nimport setJWTToken from \"../securityUtils/setJWTToken\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const createNewUsers = (newUser, history ) =>  async dispatch =>{\n\n    try {\n        await axios.post(\"/api/users/register\", newUser);\n        history.push(\"/login\");\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        })\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n};\n\nexport const login = loginRequest => async dispatch =>{\n\n    try {\n        //post => Login Request\n        const res = await axios.post(\"/api/users/login\", loginRequest);\n        //extract token res.data\n        const {token} = res.data;\n        //store the token in the localStorage\n        localStorage.setItem(\"jwtToken\", token);\n        //set our token in header\n        setJWTToken(token);\n        //decode token on React\n        const decoded  = jwt_decode(token);\n        // dispatch to our securityReducer\n        dispatch({\n            type: SET_CURRENT_USER,\n            payload: decoded\n        });\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n\n};\n\nexport const logout = () => dispatch => {\n    localStorage.removeItem(\"jwtToken\");\n    setJWTToken(false);\n    dispatch({\n        type: SET_CURRENT_USER,\n        payload: {}\n    });\n}","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {logout} from \"../../actions/SecurityActions\";\n\n\nclass Header extends Component {\n\n    logout() {\n        this.props.logout();\n        window.location.href = \"/\";\n    }\n    \n    \n    render() {\n        const {validToken, user } = this.props.security;\n        \n        \n        const userIsAuthenticated = ( \n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                    <ul className=\"navbar-nav mr-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/dashboard\">\n                                Dashboard\n                            </Link>\n                        </li>\n                    </ul>\n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link \" to=\"/dashboard\">\n                            <i className = \"fa fa-user-circle-o mr-1\"/>\n                                {user.fullName}\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/logout\" onClick = {this.logout.bind(this)}>\n                                Logout\n                                \n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n         );\n\n         const userIsNotAuthenticated = ( \n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\n                   \n                    <ul className=\"navbar-nav ml-auto\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link \" to=\"/register\">\n                                Sign Up\n                            </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/login\" >\n                                Login\n                            </Link>\n                        </li>\n                    </ul>\n                </div>\n         );\n\n\n         let headerLinks ;\n         if (validToken && user) {\n             headerLinks = userIsAuthenticated\n         }else { headerLinks = userIsNotAuthenticated }\n        \n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\n            <div className=\"container\">\n                <Link className=\"navbar-brand\" to=\"/\">\n                    Personal Project Management Tool\n                </Link>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\n                    <span className=\"navbar-toggler-icon\" />\n                </button>\n                {headerLinks}\n                \n            </div>\n        </nav>\n        )\n    }\n}\n\nHeader.propTypes = {\n    logout : PropTypes.func.isRequired,\n    security : PropTypes.object.isRequired\n}\n\n\nconst mapStateToProps = state => ({\n    security : state.security\n})\n\nexport default  connect(mapStateToProps, {logout})(Header);","import React , { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {createProject} from '../../actions/projectActions';\nimport classnames from 'classnames';\n\nclass AddProject extends Component {\n    \n    constructor () {\n        super()\n\n        this.state = {\n            projectName: \"\",\n            projectIdentifier: \"\",\n            description: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            errors: {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps (nextProps) {\n        if (nextProps.errors){\n            this.setState({errors:nextProps.errors});\n        }\n    }\n\n    onChange (e) {\n        this.setState({[e.target.name] : e.target.value });\n    }\n\n    onSubmit (e) {\n        e.preventDefault();\n        const newProject = {\n            projectName: this.state.projectName,\n            projectIdentifier: this.state.projectIdentifier,\n            description: this.state.description,\n            start_date: this.state.start_date,\n            end_date: this.state.end_date\n        };\n        this.props.createProject(newProject, this.props.history);\n    }\n\n    render () {\n            const {errors} = this.state;\n        return (\n            <div className=\"project\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <h5 className=\"display-4 text-center\">Create Project form</h5>\n                        <hr />\n                        <form onSubmit = {this.onSubmit} >\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                className={classnames(\"form-control form-control-lg\", \n                                {\"is-invalid\" : errors.projectName })}\n                                placeholder=\"Project Name\"  name = \"projectName\"  \n                                value = {this.state.projectName}\n                                onChange = {this.onChange}\n                                />\n                                {errors.projectName && (  \n                                    <div className=\"invalid-feedback\">{errors.projectName}</div> \n                                ) }\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" \n                                className={classnames(\"form-control form-control-lg\",\n                                {\"is-invalid\" : errors.projectIdentifier })}\n                                placeholder=\"Unique Project ID\" name = \"projectIdentifier\"\n                                value = {this.state.projectIdentifier}\n                                onChange = {this.onChange}\n                                 />\n                                 {errors.projectIdentifier && (  \n                                    <div className=\"invalid-feedback\">{errors.projectIdentifier}</div> \n                                ) }\n                            </div>\n                            \n                            <div className=\"form-group\">\n                                <textarea className={classnames(\"form-control form-control-lg\",\n                                {\"is-invalid\" : errors.description})} \n                                placeholder=\"Project Description\" \n                                name = \"description\" value = {this.state.description}\n                                onChange = {this.onChange}\n                                ></textarea>\n                                {errors.projectIdentifier && (  \n                                    <div className=\"invalid-feedback\">{errors.description}</div> \n                                ) }\n                            </div>\n                            <h6>Start Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" className=\"form-control form-control-lg\" \n                                name=\"start_date\" value = {this.state.start_date}  \n                                onChange = {this.onChange}\n                                />\n                                <p>{errors.start_date}</p>\n                            </div>\n                            <h6>Estimated End Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" className=\"form-control form-control-lg\" \n                                name=\"end_date\" value = {this.state.end_date} \n                                onChange = {this.onChange}\n                                />\n                                <p>{errors.end_date}</p>\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    };\n};\n\nAddProject.propTypes = {\n    createProject : PropTypes.func.isRequired,\n    errors : PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors\n});\n\n\nexport default connect(mapStateToProps , {createProject}) (AddProject);\n","import { GET_ERRORS } from '../actions/types';\n\nconst initialState = {};\n\nexport default function (state=initialState, action) {\n\n    switch (action.type) {\n        case GET_ERRORS:\n            return action.payload;\n        default:\n            return state;\n    }\n}","import {GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from '../actions/types';\n\nconst initialState = {\n    projects: [],\n    project: {}\n}\n\nexport default function(state = initialState, action) {\n\n    switch (action.type) {\n        case GET_PROJECTS:\n            return {\n                ...state,\n                projects: action.payload\n            };\n        case GET_PROJECT:\n                return {\n                    ...state,\n                    project: action.payload\n                };\n        case DELETE_PROJECT:\n                return {\n                    ...state,\n                    projects : state.projects.filter(project => project.projectIdentifier !== action.payload)\n                }\n        default:\n            return state;\n    }\n\n};","import { GET_BACKLOG, \n         GET_PROJECT_TASK, \n         DELETE_PROJECT_TASK } from '../actions/types';\n\nconst initialState = {\n        project_tasks : [],\n        project_task : {}\n};\n\n\nexport default function(state=initialState, action) {\n\n    switch (action.type) {\n        case GET_BACKLOG:\n            return {\n                ...state,\n                project_tasks: action.payload\n            }\n        case GET_PROJECT_TASK:\n                return {\n                    ...state,\n                    project_task: action.payload\n                }\n        case DELETE_PROJECT_TASK:\n                return {\n                    ...state, \n                    project_tasks : state.project_tasks.filter(project_task => project_task.projectSequence !== action.payload  )\n                }\n    \n        default:\n            return state;\n    }\n\n};","import {SET_CURRENT_USER} from \"../actions/types\";\n\nconst initialState = {\n    user: {},\n    validToken: false\n}\n\nconst booleanActionPayload = (payload) => {\n    if (payload){\n        return true;\n    }else{\n        return false;\n    }\n}\n\nexport default function (state=initialState, action){\n\n    switch (action.type) {\n        case SET_CURRENT_USER:\n            return {\n                ...state,\n                user: action.payload,\n                validToken: booleanActionPayload(action.payload)\n            }\n        default:\n            return state;\n    }\n}","import {combineReducers}  from 'redux';\nimport errorReducer from './errorReducer';\nimport projectReducer from './projectReducer';\nimport backlogReducer from './backlogReducer';\nimport securityReducer from './securityReducer';\n\nexport default combineReducers({\n    errors:   errorReducer,\n    project : projectReducer,\n    backlog : backlogReducer,\n    security : securityReducer\n\n});","import { applyMiddleware, compose, createStore  } from 'redux';\nimport thunk  from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nlet store;\n\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\n\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\n    store = createStore(rootReducer, \n                        initialState, \n                        compose(applyMiddleware(...middleware),\n                        ReactReduxDevTools\n                        )    \n                        );\n    \n} else {\n    store = createStore(rootReducer, \n        initialState, \n        compose(applyMiddleware(...middleware))   \n        );\n    \n}\n\n\nexport default store;","import React, { Component } from 'react';\nimport {getProject , createProject} from '../../actions/projectActions';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport classnames from 'classnames';\n\nclass UpdateProject extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n                id : \"\",\n                projectName: \"\",\n                projectIdentifier: \"\",\n                description: \"\",\n                start_date: \"\",\n                end_date: \"\",\n                errors: {}\n        }\n    }\n\n    componentWillReceiveProps(nextProps){\n        \n        if (nextProps.errors){\n            this.setState({errors : nextProps.errors});\n        }\n        \n        const {\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        } = nextProps.project;\n\n        this.setState({\n            id,\n            projectName,\n            projectIdentifier,\n            description,\n            start_date,\n            end_date\n        });\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    };\n\n\n    componentDidMount() {\n        const {id} = this.props.match.params;\n        this.props.getProject(id, this.props.history);\n    };\n\n    onChange = (event) => {\n        this.setState({ \n            [event.target.name] :  event.target.value\n        }); \n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        const updateProject = {\n            id : this.state.id,\n            projectName : this.state.projectName, \n            projectIdentifier : this.state.projectIdentifier,\n            description : this.state.description,\n            start_date : this.state.start_date,\n            end_date : this.state.end_date\n        };\n        this.props.createProject(updateProject, this.props.history);\n    };\n\n    render() {\n        const {errors} = this.state;\n        return (\n        <div className=\"project\" >    \n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                    <h5 className=\"display-4 text-center\">Update Project form</h5>\n                    <hr />\n                    <form onSubmit = {this.onSubmit}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" \n                            className={classnames(\"form-control form-control-lg\" , {\n                                \"is-invalid\" : errors.projectName\n                            } )} \n                            placeholder=\"Project Name\" \n                            name = \"projectName\" \n                            value = {this.state.projectName}\n                            onChange = {this.onChange}\n                            />\n                            { errors.projectName && (\n                                <div className = \"invalid-feedback\"> \n                                {errors.projectName}\n                                </div>\n                            )\n\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"text\" \n                            className=\"form-control form-control-lg\" \n                            placeholder=\"Unique Project ID\"\n                            name = \"projectIdentifier\"\n                            value = {this.state.projectIdentifier}\n                            disabled />\n                        </div>\n                        <div className=\"form-group\">\n                            <textarea className={classnames(\"form-control form-control-lg\" , {\n                                \"is-invalid\" : errors.description\n                            } )}  \n                            placeholder=\"Project Description\"\n                            name = \"description\"\n                            value = {this.state.description}\n                            onChange = {this.onChange}\n                            > \n                            </textarea>\n                            { errors.description && (\n                                <div className = \"invalid-feedback\"> \n                                {errors.description}\n                                </div>\n                            )}\n                        </div>\n                        <h6>Start Date</h6>\n                        <div className=\"form-group\">\n                            <input type=\"date\" \n                            className=\"form-control form-control-lg\" \n                            name=\"start_date\" \n                            value = {this.state.start_date}\n                            onChange = {this.onChange}\n                            />\n                        </div>\n                        <h6>Estimated End Date</h6>\n                        <div className=\"form-group\">\n                            <input type=\"date\" \n                            className=\"form-control form-control-lg\" \n                            name=\"end_date\" \n                            value = {this.state.end_date}\n                            onChange = {this.onChange}\n                            />\n                        </div>\n\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                    </form>\n                </div>\n            </div>\n        </div>  \n        </div> \n        );\n    }\n};\n\n\nUpdateProject.propTypes = {\n    getProject : PropTypes.func.isRequired,\n    project : PropTypes.object.isRequired,\n    createProject : PropTypes.func.isRequired,\n    errors : PropTypes.object.isRequired\n\n};\n\nconst mapStateToProps = state => ({\n    project : state.project.project,\n    errors : state.errors\n});\n\n\nexport default connect(mapStateToProps, {getProject , createProject})  (UpdateProject);\n\n","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {deleteProjectTask} from '../../../actions/backlogActions';\nimport PropTypes from \"prop-types\"; \nimport {connect} from \"react-redux\"; \n\nclass ProjectTask extends Component {\n\n    onDeleteClick = (backlog_id,pt_id) =>{\n        this.props.deleteProjectTask(backlog_id,pt_id);\n    }\n    render() {\n\n        const {project_task} = this.props;\n        let priorityClass;\n        let priorityString;\n\n        if (project_task.priority ===1){\n            priorityClass = \"bg-danger text-light\"\n            priorityString = \"HIGH\"\n        }\n\n        if (project_task.priority ===2){\n            priorityClass = \"bg-warning text-light\"\n            priorityString = \"MEDIUM\"\n        }\n\n        if (project_task.priority ===3){\n            priorityClass = \"bg-info text-light\"\n            priorityString = \"LOW\"\n        }\n        return (\n            \n                     <div className=\"card mb-1 bg-light\">\n \n                         <div className={`card-header text-primary ${priorityClass}`}>\n                             ID: {project_task.projectSequence} -- Priority: {priorityString}\n                         </div>\n                         <div className=\"card-body bg-light\">\n                             <h5 className=\"card-title\">{project_task.summary}</h5>\n                             <p className=\"card-text text-truncate \">\n                                 {project_task.acceptanceCriteria}\n                             </p>\n                             <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\n                                 View / Update\n                             </Link>\n \n                             <button className=\"btn btn-danger ml-4\" onClick={this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)} >\n                                 Delete\n                             </button>\n                         </div>\n                     </div>\n\n        )\n    }\n};\n\nProjectTask.propTypes = {\n    deleteProjectTask: PropTypes.func.isRequired\n}\n\nexport default connect(null, {deleteProjectTask})(ProjectTask);\n","import axios from \"axios\";\nimport {GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK  } from './types';\n\n\nexport const addProjectTask = (backlog_id, projectTask, history) => async dispatch => {\n\n    try {\n        await axios.post(`/api/backlog/${backlog_id}`, projectTask);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n    }\n    catch(err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        });\n\n    }\n};\n\nexport const getBacklog = backlog_id => async dispatch => {\n\n        try {\n            const res = await axios.get(`/api/backlog/${backlog_id}`);\n            dispatch({\n                type: GET_BACKLOG,\n                payload: res.data\n            });\n            \n        } catch (error) {\n            dispatch({\n                type: GET_ERRORS,\n                payload: error.response.data\n            });\n        }\n\n};\n\nexport const getProjectTask = (backlog_id, pt_id, history) => async dispatch => {\n\n    try {\n\n        const res = await axios.get(`/api/backlog/${backlog_id}/${pt_id}`);\n        dispatch({\n            type: GET_PROJECT_TASK,\n            payload: res.data\n        });\n\n    } catch (error) {\n        history.push('/dashboard');\n    }\n\n}; \n\nexport const updateProjectTask = (backlog_id, pt_id, project_Task, history) => async dispatch => {\n\n    try {\n        const res = await axios.patch(`/api/backlog/${backlog_id}/${pt_id}`, project_Task);\n        history.push(`/projectBoard/${backlog_id}`);\n        dispatch({\n            type: GET_ERRORS,\n            payload: {}\n        });\n\n    } catch (err) {\n        dispatch({\n            type: GET_ERRORS,\n            payload: err.response.data\n        })\n    }\n\n};\n\n\nexport const deleteProjectTask = (backlog_id, pt_id) => async dispatch => {\n\n    if (window.confirm(`You are deleting project task ${pt_id}, this action cannot be undone`)){\n        await axios.delete(`/api/backlog/${backlog_id}/${pt_id}`);\n    }\n    dispatch({\n        type: DELETE_PROJECT_TASK,\n        payload: pt_id\n    });\n\n};","import React, { Component } from 'react'\nimport ProjectTask from './ProjectTasks/ProjectTask';\n\nclass Backlog extends Component {\n    render() {\n        const {project_tasks_prop} = this.props;\n\n        const tasks = project_tasks_prop.map(project_task => (\n            <ProjectTask key={project_task.id} project_task={project_task} />\n        ));\n\n        const todoItems = [];\n        const inProgressItems = [];\n        const doneItems = [];\n\n        for(let i=0; i<tasks.length; i++){\n            if (tasks[i].props.project_task.status === 'TO_DO'){\n                todoItems.push(tasks[i]);\n            }\n            if (tasks[i].props.project_task.status === 'IN_PROGRESS'){\n                inProgressItems.push(tasks[i]);\n            }\n            if (tasks[i].props.project_task.status === 'DONE'){\n                doneItems.push(tasks[i]);\n            }\n        }\n\n        return ( \n         <div className=\"container\">\n             <div className=\"row\">\n                 <div className=\"col-md-4\">\n                     <div className=\"card text-center mb-2\">\n                         <div className=\"card-header bg-secondary text-white\">\n                             <h3>TO DO</h3>\n                         </div>\n                     </div>\n                     {todoItems}\n                     {\n                         //Project Task component\n                     }\n                 </div>\n                 <div className=\"col-md-4\">\n                     <div className=\"card text-center mb-2\">\n                         <div className=\"card-header bg-primary text-white\">\n                             <h3>In Progress</h3>\n                         </div>\n                     </div>\n                     { \n                        inProgressItems \n                        //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n \n                       //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                     }\n                 </div>\n                 <div className=\"col-md-4\">\n                     <div className=\"card text-center mb-2\">\n                         <div className=\"card-header bg-success text-white\">\n                             <h3>Done</h3>\n                         </div>\n                     </div>\n                     { \n                        doneItems \n                        //<!-- SAMPLE PROJECT TASK STARTS HERE -->\n \n                       //<!-- SAMPLE PROJECT TASK ENDS HERE -->\n                     }\n                 </div>\n             </div>\n         </div>\n         )\n    }\n};\n\nexport default Backlog;\n","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport Backlog from './Backlog';\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport {getBacklog} from \"../../actions/backlogActions\";\n\nclass ProjectBoard extends Component {\n\n    constructor(){\n        super();\n        this.state = {\n            errors: {}\n        };\n    }\n\n    componentWillReceiveProps(nextProps){\n        if (nextProps.errors){\n            this.setState({errors:nextProps.errors});\n        }\n    }\n\n    componentDidMount(){\n        const {id} = this.props.match.params;\n        this.props.getBacklog(id);\n    }\n\n\n    render() {\n\n        const {id} = this.props.match.params;\n        const {project_tasks} = this.props.backlog;\n        const {errors} = this.state\n        \n        let boardContent;\n        \n        const boardAlgorithm = (errors, project_tasks) => {\n            if (project_tasks.length < 1){\n   \n              if (errors.projectNotFound){\n                    return(\n                        <div className=\"alert alert-danger text-center\" role=\"alert\" > \n                        {errors.projectNotFound}\n                         </div>\n                    );\n            \n                } else if (errors.projectIdentifier){\n                    return(\n                        <div className=\"alert alert-danger text-center\" role=\"alert\" > \n                        {errors.projectIdentifier}\n                         </div>\n                    );\n                }\n                else {\n                    return(\n                        <div className=\"alert alert-info text-center\" role=\"alert\" > \n                        No Project Task on this board\n                         </div>\n                    )\n                }\n            } else{\n                return  <Backlog project_tasks_prop = {project_tasks} />\n            }\n        };\n\n        boardContent = boardAlgorithm(errors,project_tasks);\n        \n        return (\n            <div className=\"container\">\n        <Link to = {`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\n            <i className=\"fas fa-plus-circle\"> Create Project Task</i>\n        </Link>\n        <br />\n        <hr />\n       {boardContent}\n    </div>\n\n        )\n    }\n};\n\nProjectBoard.propTypes = {\n    backlog: PropTypes.object.isRequired,\n    getBacklog: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n        backlog: state.backlog,\n        errors: state.errors\n    })\n\nexport default connect(mapStateToProps, {getBacklog})(ProjectBoard);\n\n","import React, { Component } from 'react';\nimport {Link} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport classnames from  \"classnames\";\nimport {addProjectTask} from \"../../../actions/backlogActions\";\nimport PropTypes from \"prop-types\"; \n\nclass AddProjectTask extends Component {\n    \n    constructor(props){ \n        super(props)\n        const {id} = this.props.match.params;\n        this.state = {\n            \"summary\": \"\",\n            \"acceptanceCriteria\" : \"\",\n            \"status\" : \"\",\n            \"priority\" : 0,\n            \"dueDate\" : null,\n            \"projectIdentifier\" : id,\n            \"errors\": {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.errors){\n            this.setState({errors:nextProps.errors });\n        }\n    }\n\n    onChange (event){\n        this.setState({[event.target.name]: event.target.value});\n        \n    }\n\n    onSubmit (event) {\n\n        event.preventDefault();\n\n        const newTask = {\n            \"summary\": this.state.summary,\n            \"acceptanceCriteria\" :this.state.acceptanceCriteria,\n            \"status\" : this.state.status,\n            \"priority\" : this.state.priority,\n            \"dueDate\" : this.state.dueDate\n        };\n        this.props.addProjectTask(this.state.projectIdentifier, newTask, this.props.history);\n    }\n\n\n\n    render() {\n        const {id} = this.props.match.params;\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n            <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                    <Link to = {`/projectBoard${id}`} className=\"btn btn-light\">\n                        Back to Project Board\n                    </Link>\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\n                    <form onSubmit = {this.onSubmit} >\n                        <div className=\"form-group\">\n                            <input type=\"text\" className= {classnames(\"form-control form-control-lg\", {\n                                \"is-invalid\" : errors.summary\n                            } )}\n                            name=\"summary\" placeholder=\"Project Task summary\" \n                            value = {this.state.summary} onChange = {this.onChange}\n                            />\n                            {\n                                errors.summary && (\n                                    <div className = \"invalid-feedback\">{errors.summary}</div>\n                                )\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" \n                            name=\"acceptanceCriteria\"  value = {this.state.acceptanceCriteria} \n                            onChange = {this.onChange}></textarea>\n                        </div>\n                        <h6>Due Date</h6>\n                        <div className=\"form-group\">\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" \n                            value = {this.state.dueDate}  onChange = {this.onChange} />\n                        </div>\n                        <div className=\"form-group\">\n                            <select className=\"form-control form-control-lg\" name=\"priority\" value = {this.state.priority} onChange = {this.onChange} >\n                                <option value={0}>Select Priority</option>\n                                <option value={1}>High</option>\n                                <option value={2}>Medium</option>\n                                <option value={3}>Low</option>\n                            </select>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <select className=\"form-control form-control-lg\" name=\"status\" \n                            value = {this.state.status} onChange = {this.onChange} >\n                                <option value=\"\">Select Status</option>\n                                <option value=\"TO_DO\">TO DO</option>\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                <option value=\"DONE\">DONE</option>\n                            </select>\n                        </div>\n\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n        )\n    }\n};\n\nAddProjectTask.propTypes = {\n    addProjectTask : PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n\n    errors: state.errors\n});\n\n\nexport default connect(mapStateToProps,{addProjectTask}) (AddProjectTask);\n","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\"; \nimport {connect} from \"react-redux\";\nimport classnames from  \"classnames\";\nimport {Link} from \"react-router-dom\";\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\";\n\nclass UpdateProjectTask extends Component {\n\n\n    constructor() {\n        super();\n\n        this.state = {\n            id: \"\",\n            projectSequence: \"\",\n            summary: \"\",\n            acceptanceCriteria: \"\",\n            status: \"\",\n            priority: \"\",\n            dueDate: \"\",\n            projectIdentifier: \"\",\n            create_at: \"\",\n            errors: {}\n\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidMount() {\n        const {backlog_id, pt_id} = this.props.match.params;\n        this.props.getProjectTask(backlog_id, pt_id, this.props.history);\n    }\n\n    componentWillReceiveProps(nextProps){\n\n        if (nextProps.errors){\n            this.setState({errors:nextProps.errors});\n        }\n           \n    const {   id,\n            projectSequence,\n            summary,\n            acceptanceCriteria,\n            status,\n            priority,\n            dueDate,\n            projectIdentifier,\n            create_at } = nextProps.project_task;\n        \n    this.setState({id,\n        projectSequence,\n        summary,\n        acceptanceCriteria,\n        status,\n        priority,\n        dueDate,\n        projectIdentifier,\n        create_at});  \n            \n        } \n\n     onChange(e){\n         this.setState({[e.target.name]:e.target.value});\n     }   \n\n     onSubmit(e){\n\n        e.preventDefault();\n     \n        const updateProjectTask = {\n\n            id : this.state.id,\n            projectSequence : this.state.projectSequence,\n            summary : this.state.summary,\n            acceptanceCriteria : this.state.acceptanceCriteria,\n            status : this.state.status ,\n            priority : this.state.priority ,\n            dueDate : this.state.dueDate,\n            projectIdentifier : this.state.projectIdentifier,\n            create_at : this.state.create_at\n        }\n       // console.log(updateProjectTask);\n       this.props.updateProjectTask(\n                    this.state.projectIdentifier,\n                    this.state.projectSequence,       \n                    updateProjectTask,\n                    this.props.history);\n\n    }\n        \n    render() {\n        const {errors} = this.state;\n        return (\n            <div className=\"add-PBI\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-8 m-auto\">\n                        <Link to={`/projectBoard/${this.state.projectIdentifier}`} className=\"btn btn-light\">\n                            Back to Project Board\n                        </Link>\n                        <h4 className=\"display-4 text-center\">Update Project Task</h4>\n                        <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} \n                        | Project Task ID: {this.state.projectSequence} </p>\n                        <form onSubmit={this.onSubmit} >\n                            <div className=\"form-group\">\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg\", {\n                                    \"is-invalid\": errors.summary\n                                })} \n                                name=\"summary\" placeholder=\"Project Task summary\" \n                                value = {this.state.summary} onChange={this.onChange}   />\n                                {\n                                    errors.summary && (\n                                        <div className=\"invalid-feedback\">{errors.summary}</div>\n                                    )\n                                }\n                            </div>\n                            <div className=\"form-group\">\n                                <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" \n                                name=\"acceptanceCriteria\" value = {this.state.acceptanceCriteria} \n                                onChange={this.onChange} ></textarea>\n                            </div>\n                            <h6>Due Date</h6>\n                            <div className=\"form-group\">\n                                <input type=\"date\" className=\"form-control form-control-lg\" \n                                name=\"dueDate\" value = {this.state.dueDate} onChange={this.onChange} />\n                            </div>\n                            <div className=\"form-group\">\n                                <select className=\"form-control form-control-lg\" name=\"priority\" value = {this.state.priority} onChange={this.onChange}  >\n                                    <option value={0}>Select Priority</option>\n                                    <option value={1}>High</option>\n                                    <option value={2}>Medium</option>\n                                    <option value={3}>Low</option>\n                                </select>\n                            </div>\n    \n                            <div className=\"form-group\">\n                                <select className=\"form-control form-control-lg\" name=\"status\" value = {this.state.status} onChange={this.onChange} >\n                                    <option value=\"\">Select Status</option>\n                                    <option value=\"TO_DO\">TO DO</option>\n                                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\n                                    <option value=\"DONE\">DONE</option>\n                                </select>\n                            </div>\n    \n                            <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\n                        </form>\n                    </div>\n                </div>\n            </div>\n        </div>\n    \n        )\n    }\n};\n\nUpdateProjectTask.propTypes = {\n    getProjectTask: PropTypes.func.isRequired,\n    project_task: PropTypes.object.isRequired,\n    updateProjectTask: PropTypes.func.isRequired,\n    errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => (\n    {\n        project_task: state.backlog.project_task,\n        errors: state.errors\n    }\n);\n\nexport default connect(mapStateToProps, {getProjectTask, updateProjectTask}) (UpdateProjectTask);\n","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\n  class Landing extends Component {\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"landing\">\n        <div className=\"light-overlay landing-inner text-dark\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-12 text-center\">\n                        <h1 className=\"display-3 mb-4\">Personal Project Management Tool</h1>\n                        <p className=\"lead\">\n                            Create your account to join active projects or start you own\n                        </p>\n                        <hr />\n                        <Link className = \"btn btn-lg btn-primary mr-2\" to=\"/register\"> Sign Up </Link>\n                        <Link className=\"btn btn-lg btn-secondary mr-2\" to=\"/login\" >  Login </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n        )\n    }\n}\n\nLanding.propTypes = {\n\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n\n    security: state.security\n\n}); \n\nexport default connect(mapStateToProps, null)(Landing);\n","import React, { Component } from 'react';\nimport { createNewUsers } from \"../../actions/SecurityActions\";\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport classnames from \"classnames\";\n\n\n class Register extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            \"username\": \"\",\n            \"fullName\": \"\",\n            \"password\": \"\",\n            \"confirmPassword\": \"\",\n            \"errors\": {}\n        }\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentDidUpdate(prevProps,prevState){\n\n        if (this.props.errors !== prevProps.errors){\n            this.setState({errors:this.props.errors});\n        }\n    }\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n    onChange (e) {\n            this.setState({ [e.target.name] : e.target.value });\n    }\n\n    onSubmit (e){\n        e.preventDefault();\n        const newUser = {\n            \"username\": this.state.username,\n            \"fullName\": this.state.fullName,\n            \"password\": this.state.password,\n            \"confirmPassword\": this.state.confirmPassword,\n            \"errors\": this.state.errors\n        }\n        this.props.createNewUsers(newUser, this.props.history);\n    }\n\n    render() {\n\n        const {errors} = this.state;\n        return (\n            <div className=\"register\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                    <h1 className=\"display-4 text-center\">Sign Up</h1>\n                    <p className=\"lead text-center\">Create your Account</p>\n                    <form onSubmit = {this.onSubmit} >\n                        <div className=\"form-group\">\n                            <input type=\"text\" \n                            className={classnames(\"form-control form-control-lg\", {\n                                \"is-invalid\": errors.fullName\n                            })}                             \n                            placeholder= \"Full Name\" name=\"fullName\"\n                                value={this.state.fullName}  onChange={this.onChange}/>  \n                                {\n                                    errors.fullName && (\n                                        <div className =\"invalid-feedback\">{errors.fullName}</div>\n                                    )\n                                }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"text\" \n                            className={classnames(\"form-control form-control-lg\", {\n                                \"is-invalid\": errors.username\n                            })} \n                            placeholder=\"Email Address (username)\" name=\"username\" \n                            value={this.state.username} onChange={this.onChange} />\n                            {\n                                errors.username && (\n                                    <div className =\"invalid-feedback\">{errors.username}</div>\n                                )\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" \n                            className={classnames(\"form-control form-control-lg\", {\n                                \"is-invalid\": errors.password\n                            })} \n                            placeholder=\"Password\" name=\"password\" \n                            value={this.state.password} onChange={this.onChange} />\n                            {\n                                errors.password && (\n                                    <div className =\"invalid-feedback\">{errors.password}</div>\n                                )\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" \n                            className={classnames(\"form-control form-control-lg\", {\n                                \"is-invalid\": errors.confirmPassword\n                            })}  \n                            placeholder=\"Confirm Password\" name=\"confirmPassword\" \n                            value={this.state.confirmPassword} onChange={this.onChange} />\n                            {\n                                errors.confirmPassword && (\n                                    <div className =\"invalid-feedback\">{errors.confirmPassword}</div>\n                                )\n                            }\n                        </div>\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n\n        )\n    }\n}\n\nRegister.propTypes = {\n\n    errors: PropTypes.object.isRequired,\n    createNewUser: PropTypes.func.isRequired,\n    security: PropTypes.object.isRequired \n};\n\nconst mapStateToProps = state => ({\n\n    errors: state.errors,\n    security: state.security\n});\n\nexport default connect(mapStateToProps,{createNewUsers})(Register);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport {connect} from \"react-redux\";\nimport classnames from \"classnames\";\nimport {login} from \"../../actions/SecurityActions\";\n\nclass Login extends Component {\n\n    constructor(){\n        super()\n        this.state = {\n            \"username\": \"\",\n            \"password\": \"\",\n            \"errors\" : {}\n        };\n        this.onChange = this.onChange.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n    }\n\n    componentWillReceiveProps(nextProps){\n\n        if (nextProps.security.validToken){\n            this.props.history.push(\"/Dashboard\");\n        }\n        if (nextProps.errors){\n            this.setState({errors:nextProps.errors});\n        }\n\n    }\n\n    onSubmit(e){\n        e.preventDefault();\n        const loginRequest = {\n            \"username\" : this.state.username,\n            \"password\" : this.state.password\n        };\n        this.props.login(loginRequest);\n    }\n\n    onChange(e) {\n        this.setState({[e.target.name]:e.target.value});\n    }\n\n    componentDidMount(){\n        if(this.props.security.validToken){\n            this.props.history.push(\"/dashboard\");\n        }\n    }\n\n\n    render() {\n\n        const {errors} = this.state;\n        return (\n            <div className=\"login\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-8 m-auto\">\n                    <h1 className=\"display-4 text-center\">Log In</h1>\n                    <form onSubmit = {this.onSubmit}>\n                        <div className=\"form-group\">\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg\", \n                            { \"is-invalid\" : errors.username })} \n                            placeholder=\"Email Address\" name=\"username\" \n                            value = {this.state.username} \n                            onChange = {this.onChange} />\n                            {\n                                errors.username && ( <div className=\"invalid-feedback\">{errors.username}</div> )\n                            }\n                        </div>\n                        <div className=\"form-group\">\n                            <input type=\"password\" className={classnames(\"form-control form-control-lg\", {\n                                \"is-invalid\" : errors.password\n                            })} \n                            placeholder=\"Password\" name=\"password\" \n                            value = {this.state.password} \n                            onChange = {this.onChange} />\n                            {\n                                errors.password && ( <div className=\"invalid-feedback\">{errors.password}</div> )\n                            }\n\n                        </div>\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\n                    </form>\n                </div>\n            </div>\n        </div>\n    </div>\n        )\n    }\n}\n\nLogin.propTypes = {\n    login : PropTypes.func.isRequired,\n    errors : PropTypes.object.isRequired,\n    security : PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n    security : state.security,\n    errors : state.errors\n})\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst SecureRoute = ({component:Component, security, ...otherProps}) => (\n\n    <Route {...otherProps} render = {props => \n        security.validToken ===true ? \n        (<Component {...props} />)  :\n        (<Redirect to =\"/login\"/>) } />\n)\n\nSecureRoute.propTypes = {\n    security: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n\n    security: state.security\n\n});\n\nexport default connect(mapStateToProps)(SecureRoute);\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport Header from './components/Layout/Header';\nimport {BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport AddProject from './components/Project/AddProject';\nimport {Provider} from 'react-redux';\nimport store from './store'; \nimport UpdateProject from './components/Project/UpdateProject';\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\nimport AddProjectTask from './components/ProjectBoard/ProjectTasks/AddProjectTask';\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTasks/UpdateProjectTask';\nimport Landing from './components/Layout/Landing';\nimport Register from './components/UserManagement/Register';\nimport Login from './components/UserManagement/Login';\nimport jwt_decode  from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { SET_CURRENT_USER } from './actions/types';\nimport { logout } from './actions/SecurityActions';\nimport SecureRoute from './securityUtils/SecureRoute';\n\n\nconst jwtToken = localStorage.jwtToken;\n\nif (jwtToken){\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken\n  });\n  const currentTime = Date.now()/1000;\n  if (decoded_jwtToken.exp < currentTime){\n    store.dispatch(logout());\n    window.location.href = \"/\";\n\n  }\n};\n\nfunction App() {\n  return (\n    <Provider store ={store} >\n      <Router>\n      <div className=\"App\">\n      <Header/>\n      {\n        //public routes\n      }\n\n      <Route exact path=\"/\" component={Landing}/>\n      <Route exact path=\"/register\" component={Register}/>\n      <Route exact path=\"/login\" component={Login}/>\n      \n      {\n        //private routes\n      }\n      <Switch> \n      <SecureRoute exact path = \"/dashboard\" component = { Dashboard } />\n      <SecureRoute exact path = \"/addProject\" component = { AddProject } />\n      <SecureRoute exact path = \"/updateProject/:id\" component = { UpdateProject } />\n      <SecureRoute exact path = \"/projectBoard/:id\" component ={ProjectBoard}  />\n      <SecureRoute exact path = \"/addProjectTask/:id\" component ={AddProjectTask} />\n      <SecureRoute exact path = \"/updateProjectTask/:backlog_id/:pt_id\" component ={UpdateProjectTask} />      \n      </Switch>\n      </div>\n      </Router>\n    </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}